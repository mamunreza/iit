// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TaskPlanner.Data;

namespace TaskPlanner.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180826125744_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskPlanner.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DueDate");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("TaskRotationId");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskRotationId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskPlanner.Models.TaskHistory", b =>
                {
                    b.Property<int>("TaskHistoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CompletionDate");

                    b.Property<int>("TaskId");

                    b.HasKey("TaskHistoryId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskHistorys");
                });

            modelBuilder.Entity("TaskPlanner.Models.TaskRotation", b =>
                {
                    b.Property<int>("TaskRotationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("TaskRotationId");

                    b.ToTable("TaskRotations");
                });

            modelBuilder.Entity("TaskPlanner.Models.Task", b =>
                {
                    b.HasOne("TaskPlanner.Models.TaskRotation", "TaskRotation")
                        .WithMany()
                        .HasForeignKey("TaskRotationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskPlanner.Models.TaskHistory", b =>
                {
                    b.HasOne("TaskPlanner.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
